// /*
working order (not in order yet):
-get information function and driver function (these 2 will probably be the main method, but what they require to work is very different), also is essentially the main function
	gets the user's equations in a very specific form
	### has no dependency on any other function
	driver function runs all the functions, feeds each one the appropriate information
	### needs all other function to correctly work
-print function
	to help make the user's experience less confusing
	also helps with debugging
	### needs all other functions to correctly work
-split system function
	breaking down the equation
	### needs get information function, really depends on how we implement the users input, as the way we ask for their input can destroy our need to even break down the equation into its bits and pieces
-split into terms function
	subsequently also splitting the coefficient from the variable as well to do the multiplication and other operations
	identify like terms 
	### needs get information function, really depends on how we implement the users input, as the way we ask for their input can destroy our need to even break down the equation into its bits and pieces
-inserting each variable's solution back into another equation function
	solving the problem and etc.
	### needs split system function and split into terms function and get information function
-other kinds of solutions function
	needed to check if there are infinite solutions or not real solutions
	### needs split system function and split into terms function and inserting each variable's solution back into another equation function
-isolating the variable function
	isolates a variable to one side
	### needs teh split system function nad the split into terms function and the other kinds of solution 

*possibly in the future, we could add different features including accepting other situations of linear equations
*also try doing the time complexity of the functions and trying to optimize the functions along the way and at the end
*debug badbadbadbad
*/